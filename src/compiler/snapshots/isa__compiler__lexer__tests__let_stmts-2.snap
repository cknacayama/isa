---
source: src/compiler/lexer.rs
expression: "Lexer ::\nnew(0,\n\"let fib n = match n with ..2 -> n, _ -> fib (n - 1) + fib (n - 2)\").collect\n:: < Vec < _ >> ()"
---
[
    Ok(
        Spand {
            data: KwLet,
            span: SpanData { file_id: 0, lo: 0, hi: 3 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "fib",
            ),
            span: SpanData { file_id: 0, lo: 4, hi: 7 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "n",
            ),
            span: SpanData { file_id: 0, lo: 8, hi: 9 },
        },
    ),
    Ok(
        Spand {
            data: Eq,
            span: SpanData { file_id: 0, lo: 10, hi: 11 },
        },
    ),
    Ok(
        Spand {
            data: KwMatch,
            span: SpanData { file_id: 0, lo: 12, hi: 17 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "n",
            ),
            span: SpanData { file_id: 0, lo: 18, hi: 19 },
        },
    ),
    Ok(
        Spand {
            data: KwWith,
            span: SpanData { file_id: 0, lo: 20, hi: 24 },
        },
    ),
    Ok(
        Spand {
            data: DotDot,
            span: SpanData { file_id: 0, lo: 25, hi: 27 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                2,
            ),
            span: SpanData { file_id: 0, lo: 27, hi: 28 },
        },
    ),
    Ok(
        Spand {
            data: Arrow,
            span: SpanData { file_id: 0, lo: 29, hi: 31 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "n",
            ),
            span: SpanData { file_id: 0, lo: 32, hi: 33 },
        },
    ),
    Ok(
        Spand {
            data: Comma,
            span: SpanData { file_id: 0, lo: 33, hi: 34 },
        },
    ),
    Ok(
        Spand {
            data: Underscore,
            span: SpanData { file_id: 0, lo: 35, hi: 36 },
        },
    ),
    Ok(
        Spand {
            data: Arrow,
            span: SpanData { file_id: 0, lo: 37, hi: 39 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "fib",
            ),
            span: SpanData { file_id: 0, lo: 40, hi: 43 },
        },
    ),
    Ok(
        Spand {
            data: LParen,
            span: SpanData { file_id: 0, lo: 44, hi: 45 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "n",
            ),
            span: SpanData { file_id: 0, lo: 45, hi: 46 },
        },
    ),
    Ok(
        Spand {
            data: Operator(
                "-",
            ),
            span: SpanData { file_id: 0, lo: 47, hi: 48 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                1,
            ),
            span: SpanData { file_id: 0, lo: 49, hi: 50 },
        },
    ),
    Ok(
        Spand {
            data: RParen,
            span: SpanData { file_id: 0, lo: 50, hi: 51 },
        },
    ),
    Ok(
        Spand {
            data: Operator(
                "+",
            ),
            span: SpanData { file_id: 0, lo: 52, hi: 53 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "fib",
            ),
            span: SpanData { file_id: 0, lo: 54, hi: 57 },
        },
    ),
    Ok(
        Spand {
            data: LParen,
            span: SpanData { file_id: 0, lo: 58, hi: 59 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "n",
            ),
            span: SpanData { file_id: 0, lo: 59, hi: 60 },
        },
    ),
    Ok(
        Spand {
            data: Operator(
                "-",
            ),
            span: SpanData { file_id: 0, lo: 61, hi: 62 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                2,
            ),
            span: SpanData { file_id: 0, lo: 63, hi: 64 },
        },
    ),
    Ok(
        Spand {
            data: RParen,
            span: SpanData { file_id: 0, lo: 64, hi: 65 },
        },
    ),
]
