---
source: src/compiler/parser.rs
expression: "create_parser(\"a + 1 + 1\").parse_expr()"
---
Ok(
    Expr {
        kind: Infix {
            op: Ident {
                ident: "+",
                span: SpanData { file_id: 0, start: 6, end: 7 },
            },
            lhs: Expr {
                kind: Infix {
                    op: Ident {
                        ident: "+",
                        span: SpanData { file_id: 0, start: 2, end: 3 },
                    },
                    lhs: Expr {
                        kind: Path(
                            Path {
                                segments: [
                                    Ident {
                                        ident: "a",
                                        span: SpanData { file_id: 0, start: 0, end: 1 },
                                    },
                                ],
                            },
                        ),
                        span: SpanData { file_id: 0, start: 0, end: 1 },
                        ty: (),
                    },
                    rhs: Expr {
                        kind: Int(
                            1,
                        ),
                        span: SpanData { file_id: 0, start: 4, end: 5 },
                        ty: (),
                    },
                },
                span: SpanData { file_id: 0, start: 0, end: 5 },
                ty: (),
            },
            rhs: Expr {
                kind: Int(
                    1,
                ),
                span: SpanData { file_id: 0, start: 8, end: 9 },
                ty: (),
            },
        },
        span: SpanData { file_id: 0, start: 0, end: 9 },
        ty: (),
    },
)
