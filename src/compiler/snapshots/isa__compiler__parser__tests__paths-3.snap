---
source: src/compiler/parser.rs
expression: "create_parser(\"a::b::c a\").parse_expr()"
---
Ok(
    Expr {
        kind: Call {
            callee: Expr {
                kind: Path(
                    Path {
                        segments: [
                            Ident {
                                ident: "a",
                                span: SpanData { file_id: 0, start: 0, end: 1 },
                            },
                            Ident {
                                ident: "b",
                                span: SpanData { file_id: 0, start: 3, end: 4 },
                            },
                            Ident {
                                ident: "c",
                                span: SpanData { file_id: 0, start: 6, end: 7 },
                            },
                        ],
                    },
                ),
                span: SpanData { file_id: 0, start: 0, end: 7 },
                ty: (),
            },
            arg: Expr {
                kind: Path(
                    Path {
                        segments: [
                            Ident {
                                ident: "a",
                                span: SpanData { file_id: 0, start: 8, end: 9 },
                            },
                        ],
                    },
                ),
                span: SpanData { file_id: 0, start: 8, end: 9 },
                ty: (),
            },
        },
        span: SpanData { file_id: 0, start: 0, end: 9 },
        ty: (),
    },
)
