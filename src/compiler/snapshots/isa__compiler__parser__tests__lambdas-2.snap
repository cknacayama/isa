---
source: src/compiler/parser.rs
expression: "create_parser(r\"\\(a,b) -> a + b\").parse_expr()"
---
Ok(
    Expr {
        kind: Fn {
            param: Param {
                pat: Pat {
                    kind: Tuple(
                        [
                            Pat {
                                kind: Constructor {
                                    name: Path {
                                        segments: [
                                            Ident {
                                                ident: "a",
                                                span: SpanData { file_id: 0, start: 2, end: 3 },
                                            },
                                        ],
                                    },
                                    args: [],
                                },
                                span: SpanData { file_id: 0, start: 2, end: 3 },
                                ty: (),
                            },
                            Pat {
                                kind: Constructor {
                                    name: Path {
                                        segments: [
                                            Ident {
                                                ident: "b",
                                                span: SpanData { file_id: 0, start: 4, end: 5 },
                                            },
                                        ],
                                    },
                                    args: [],
                                },
                                span: SpanData { file_id: 0, start: 4, end: 5 },
                                ty: (),
                            },
                        ],
                    ),
                    span: SpanData { file_id: 0, start: 1, end: 6 },
                    ty: (),
                },
            },
            expr: Expr {
                kind: Infix {
                    op: Ident {
                        ident: "+",
                        span: SpanData { file_id: 0, start: 12, end: 13 },
                    },
                    lhs: Expr {
                        kind: Path(
                            Path {
                                segments: [
                                    Ident {
                                        ident: "a",
                                        span: SpanData { file_id: 0, start: 10, end: 11 },
                                    },
                                ],
                            },
                        ),
                        span: SpanData { file_id: 0, start: 10, end: 11 },
                        ty: (),
                    },
                    rhs: Expr {
                        kind: Path(
                            Path {
                                segments: [
                                    Ident {
                                        ident: "b",
                                        span: SpanData { file_id: 0, start: 14, end: 15 },
                                    },
                                ],
                            },
                        ),
                        span: SpanData { file_id: 0, start: 14, end: 15 },
                        ty: (),
                    },
                },
                span: SpanData { file_id: 0, start: 10, end: 15 },
                ty: (),
            },
        },
        span: SpanData { file_id: 0, start: 0, end: 15 },
        ty: (),
    },
)
