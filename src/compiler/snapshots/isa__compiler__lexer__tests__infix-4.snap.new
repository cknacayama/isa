---
source: src/compiler/lexer.rs
assertion_line: 495
expression: "Lexer :: new(0, \"a + ((c ^^ []) >>= 'd')\").collect :: < Vec < _ >> ()"
---
[
    Ok(
        Spand {
            data: Ident(
                "a",
            ),
            span: SpanData { file_id: 0, lo: 0, hi: 1 },
        },
    ),
    Ok(
        Spand {
            data: Operator(
                "+",
            ),
            span: SpanData { file_id: 0, lo: 2, hi: 3 },
        },
    ),
    Ok(
        Spand {
            data: LParen,
            span: SpanData { file_id: 0, lo: 4, hi: 5 },
        },
    ),
    Ok(
        Spand {
            data: LParen,
            span: SpanData { file_id: 0, lo: 5, hi: 6 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "c",
            ),
            span: SpanData { file_id: 0, lo: 6, hi: 7 },
        },
    ),
    Ok(
        Spand {
            data: Operator(
                "^^",
            ),
            span: SpanData { file_id: 0, lo: 8, hi: 10 },
        },
    ),
    Ok(
        Spand {
            data: LBracket,
            span: SpanData { file_id: 0, lo: 11, hi: 12 },
        },
    ),
    Ok(
        Spand {
            data: RBracket,
            span: SpanData { file_id: 0, lo: 12, hi: 13 },
        },
    ),
    Ok(
        Spand {
            data: RParen,
            span: SpanData { file_id: 0, lo: 13, hi: 14 },
        },
    ),
    Ok(
        Spand {
            data: Operator(
                ">>=",
            ),
            span: SpanData { file_id: 0, lo: 15, hi: 18 },
        },
    ),
    Ok(
        Spand {
            data: Char(
                100,
            ),
            span: SpanData { file_id: 0, lo: 19, hi: 22 },
        },
    ),
    Ok(
        Spand {
            data: RParen,
            span: SpanData { file_id: 0, lo: 22, hi: 23 },
        },
    ),
]
