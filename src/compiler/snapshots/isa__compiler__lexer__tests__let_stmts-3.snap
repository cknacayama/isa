---
source: src/compiler/lexer.rs
expression: "Lexer :: new(0, \"let foo (a,b,c) = a + b - c;\").collect :: < Vec < _ >> ()"
---
[
    Ok(
        Spand {
            data: KwLet,
            span: SpanData { file_id: 0, start: 0, end: 3 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "foo",
            ),
            span: SpanData { file_id: 0, start: 4, end: 7 },
        },
    ),
    Ok(
        Spand {
            data: LParen,
            span: SpanData { file_id: 0, start: 8, end: 9 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "a",
            ),
            span: SpanData { file_id: 0, start: 9, end: 10 },
        },
    ),
    Ok(
        Spand {
            data: Comma,
            span: SpanData { file_id: 0, start: 10, end: 11 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "b",
            ),
            span: SpanData { file_id: 0, start: 11, end: 12 },
        },
    ),
    Ok(
        Spand {
            data: Comma,
            span: SpanData { file_id: 0, start: 12, end: 13 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "c",
            ),
            span: SpanData { file_id: 0, start: 13, end: 14 },
        },
    ),
    Ok(
        Spand {
            data: RParen,
            span: SpanData { file_id: 0, start: 14, end: 15 },
        },
    ),
    Ok(
        Spand {
            data: Eq,
            span: SpanData { file_id: 0, start: 16, end: 17 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "a",
            ),
            span: SpanData { file_id: 0, start: 18, end: 19 },
        },
    ),
    Ok(
        Spand {
            data: Operator(
                "+",
            ),
            span: SpanData { file_id: 0, start: 20, end: 21 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "b",
            ),
            span: SpanData { file_id: 0, start: 22, end: 23 },
        },
    ),
    Ok(
        Spand {
            data: Operator(
                "-",
            ),
            span: SpanData { file_id: 0, start: 24, end: 25 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "c",
            ),
            span: SpanData { file_id: 0, start: 26, end: 27 },
        },
    ),
    Ok(
        Spand {
            data: Semicolon,
            span: SpanData { file_id: 0, start: 27, end: 28 },
        },
    ),
]
