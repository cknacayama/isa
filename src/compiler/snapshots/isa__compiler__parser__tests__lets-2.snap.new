---
source: src/compiler/parser.rs
assertion_line: 1435
expression: "create_parser(\"let a c = 10 in let b = a in b\").parse_expr()"
---
Ok(
    Expr {
        kind: Let {
            bind: LetBind {
                operator: false,
                name: Ident {
                    ident: "a",
                    span: SpanData { file_id: 0, lo: 4, hi: 5 },
                },
                params: [
                    Param {
                        pat: Pat {
                            kind: Constructor {
                                name: Path {
                                    segments: [
                                        Ident {
                                            ident: "c",
                                            span: SpanData { file_id: 0, lo: 6, hi: 7 },
                                        },
                                    ],
                                },
                                args: [],
                            },
                            span: SpanData { file_id: 0, lo: 6, hi: 7 },
                            ty: (),
                        },
                    },
                ],
                expr: Expr {
                    kind: Int(
                        10,
                    ),
                    span: SpanData { file_id: 0, lo: 10, hi: 12 },
                    ty: (),
                },
            },
            body: Expr {
                kind: Let {
                    bind: LetBind {
                        operator: false,
                        name: Ident {
                            ident: "b",
                            span: SpanData { file_id: 0, lo: 20, hi: 21 },
                        },
                        params: [],
                        expr: Expr {
                            kind: Path(
                                Path {
                                    segments: [
                                        Ident {
                                            ident: "a",
                                            span: SpanData { file_id: 0, lo: 24, hi: 25 },
                                        },
                                    ],
                                },
                            ),
                            span: SpanData { file_id: 0, lo: 24, hi: 25 },
                            ty: (),
                        },
                    },
                    body: Expr {
                        kind: Path(
                            Path {
                                segments: [
                                    Ident {
                                        ident: "b",
                                        span: SpanData { file_id: 0, lo: 29, hi: 30 },
                                    },
                                ],
                            },
                        ),
                        span: SpanData { file_id: 0, lo: 29, hi: 30 },
                        ty: (),
                    },
                },
                span: SpanData { file_id: 0, lo: 16, hi: 30 },
                ty: (),
            },
        },
        span: SpanData { file_id: 0, lo: 0, hi: 30 },
        ty: (),
    },
)
