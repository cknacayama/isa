---
source: src/compiler/lexer.rs
assertion_line: 468
expression: "Lexer :: new(0, \"let a c = 10 in let b = a in b\").collect :: < Vec < _ >> ()"
---
[
    Ok(
        Spand {
            data: KwLet,
            span: SpanData { file_id: 0, lo: 0, hi: 3 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "a",
            ),
            span: SpanData { file_id: 0, lo: 4, hi: 5 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "c",
            ),
            span: SpanData { file_id: 0, lo: 6, hi: 7 },
        },
    ),
    Ok(
        Spand {
            data: Eq,
            span: SpanData { file_id: 0, lo: 8, hi: 9 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                10,
            ),
            span: SpanData { file_id: 0, lo: 10, hi: 12 },
        },
    ),
    Ok(
        Spand {
            data: KwIn,
            span: SpanData { file_id: 0, lo: 13, hi: 15 },
        },
    ),
    Ok(
        Spand {
            data: KwLet,
            span: SpanData { file_id: 0, lo: 16, hi: 19 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "b",
            ),
            span: SpanData { file_id: 0, lo: 20, hi: 21 },
        },
    ),
    Ok(
        Spand {
            data: Eq,
            span: SpanData { file_id: 0, lo: 22, hi: 23 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "a",
            ),
            span: SpanData { file_id: 0, lo: 24, hi: 25 },
        },
    ),
    Ok(
        Spand {
            data: KwIn,
            span: SpanData { file_id: 0, lo: 26, hi: 28 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "b",
            ),
            span: SpanData { file_id: 0, lo: 29, hi: 30 },
        },
    ),
]
