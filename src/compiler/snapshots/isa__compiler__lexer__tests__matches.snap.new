---
source: src/compiler/lexer.rs
assertion_line: 515
expression: "Lexer :: new(0, \"match 10 with 0.. -> 10, ..0 -> -10\").collect :: < Vec < _ >>\n()"
---
[
    Ok(
        Spand {
            data: KwMatch,
            span: SpanData { file_id: 0, lo: 0, hi: 5 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                10,
            ),
            span: SpanData { file_id: 0, lo: 6, hi: 8 },
        },
    ),
    Ok(
        Spand {
            data: KwWith,
            span: SpanData { file_id: 0, lo: 9, hi: 13 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                0,
            ),
            span: SpanData { file_id: 0, lo: 14, hi: 15 },
        },
    ),
    Ok(
        Spand {
            data: DotDot,
            span: SpanData { file_id: 0, lo: 15, hi: 17 },
        },
    ),
    Ok(
        Spand {
            data: Arrow,
            span: SpanData { file_id: 0, lo: 18, hi: 20 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                10,
            ),
            span: SpanData { file_id: 0, lo: 21, hi: 23 },
        },
    ),
    Ok(
        Spand {
            data: Comma,
            span: SpanData { file_id: 0, lo: 23, hi: 24 },
        },
    ),
    Ok(
        Spand {
            data: DotDot,
            span: SpanData { file_id: 0, lo: 25, hi: 27 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                0,
            ),
            span: SpanData { file_id: 0, lo: 27, hi: 28 },
        },
    ),
    Ok(
        Spand {
            data: Arrow,
            span: SpanData { file_id: 0, lo: 29, hi: 31 },
        },
    ),
    Ok(
        Spand {
            data: Operator(
                "-",
            ),
            span: SpanData { file_id: 0, lo: 32, hi: 33 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                10,
            ),
            span: SpanData { file_id: 0, lo: 33, hi: 35 },
        },
    ),
]
