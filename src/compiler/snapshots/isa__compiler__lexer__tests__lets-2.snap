---
source: src/compiler/lexer.rs
expression: "Lexer :: new(0, \"let a c = 10 in let b = a in b\").collect :: < Vec < _ >> ()"
---
[
    Ok(
        Spand {
            data: KwLet,
            span: SpanData { file_id: 0, start: 0, end: 3 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "a",
            ),
            span: SpanData { file_id: 0, start: 4, end: 5 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "c",
            ),
            span: SpanData { file_id: 0, start: 6, end: 7 },
        },
    ),
    Ok(
        Spand {
            data: Eq,
            span: SpanData { file_id: 0, start: 8, end: 9 },
        },
    ),
    Ok(
        Spand {
            data: Integer(
                10,
            ),
            span: SpanData { file_id: 0, start: 10, end: 12 },
        },
    ),
    Ok(
        Spand {
            data: KwIn,
            span: SpanData { file_id: 0, start: 13, end: 15 },
        },
    ),
    Ok(
        Spand {
            data: KwLet,
            span: SpanData { file_id: 0, start: 16, end: 19 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "b",
            ),
            span: SpanData { file_id: 0, start: 20, end: 21 },
        },
    ),
    Ok(
        Spand {
            data: Eq,
            span: SpanData { file_id: 0, start: 22, end: 23 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "a",
            ),
            span: SpanData { file_id: 0, start: 24, end: 25 },
        },
    ),
    Ok(
        Spand {
            data: KwIn,
            span: SpanData { file_id: 0, start: 26, end: 28 },
        },
    ),
    Ok(
        Spand {
            data: Ident(
                "b",
            ),
            span: SpanData { file_id: 0, start: 29, end: 30 },
        },
    ),
]
