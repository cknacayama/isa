---
source: src/compiler/parser.rs
expression: "create_parser(\"a::b::c C::a::T b\").parse_expr()"
---
Ok(
    Expr {
        kind: Call {
            callee: Expr {
                kind: Call {
                    callee: Expr {
                        kind: Path(
                            Path {
                                segments: [
                                    Ident {
                                        ident: "a",
                                        span: SpanData { file_id: 0, lo: 0, hi: 1 },
                                    },
                                    Ident {
                                        ident: "b",
                                        span: SpanData { file_id: 0, lo: 3, hi: 4 },
                                    },
                                    Ident {
                                        ident: "c",
                                        span: SpanData { file_id: 0, lo: 6, hi: 7 },
                                    },
                                ],
                            },
                        ),
                        span: SpanData { file_id: 0, lo: 0, hi: 7 },
                        ty: (),
                    },
                    arg: Expr {
                        kind: Path(
                            Path {
                                segments: [
                                    Ident {
                                        ident: "C",
                                        span: SpanData { file_id: 0, lo: 8, hi: 9 },
                                    },
                                    Ident {
                                        ident: "a",
                                        span: SpanData { file_id: 0, lo: 11, hi: 12 },
                                    },
                                    Ident {
                                        ident: "T",
                                        span: SpanData { file_id: 0, lo: 14, hi: 15 },
                                    },
                                ],
                            },
                        ),
                        span: SpanData { file_id: 0, lo: 8, hi: 15 },
                        ty: (),
                    },
                },
                span: SpanData { file_id: 0, lo: 0, hi: 15 },
                ty: (),
            },
            arg: Expr {
                kind: Path(
                    Path {
                        segments: [
                            Ident {
                                ident: "b",
                                span: SpanData { file_id: 0, lo: 16, hi: 17 },
                            },
                        ],
                    },
                ),
                span: SpanData { file_id: 0, lo: 16, hi: 17 },
                ty: (),
            },
        },
        span: SpanData { file_id: 0, lo: 0, hi: 17 },
        ty: (),
    },
)
